(define (cube-iter guess x)
  (display guess)
  (newline)
  (if (good-enough? guess x)
      guess
      (cube-iter (improve guess x) x)))

(define (improve guess x)
  ;(display "i-g")
  (/ (+ (/ x (square guess)) (* 2.0 guess)) 3.0))

(define (good-enough? guess x)
  ;(display "g-e")
  (< (abs(- (improve guess x) guess)) (* 0.0001 guess)))

(define (square x)
  ;(display "sq")
  (* x x))

(define (cube x)
  (cube-iter 1.0 x))

;(define (good-enough? guess x)
 ;   (< (abs (- (improve guess x) guess)) (abs(* guess 0.001))))
